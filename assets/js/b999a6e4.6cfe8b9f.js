"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[212],{1184:(e,r,a)=>{a.d(r,{R:()=>i,x:()=>c});var o=a(4041);const n={},t=o.createContext(n);function i(e){const r=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(t.Provider,{value:r},e.children)}},1931:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"api/types","title":"Types","description":"Import types to configure GraphQL Armor from the @escape.tech/graphql-armor-types package or each plugin individually.","source":"@site/docs/api/types.md","sourceDirName":"api","slug":"/api/types","permalink":"/graphql-armor/docs/api/types","draft":false,"unlisted":false,"editUrl":"https://github.com/Escape-Technologies/graphql-armor/blob/main/services/docs/docs/api/types.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"API","permalink":"/graphql-armor/docs/category/api"},"next":{"title":"Configuration","permalink":"/graphql-armor/docs/category/configuration"}}');var n=a(1085),t=a(1184);const i={},c="Types",s={},l=[{value:"Config",id:"config",level:2},{value:"Callbacks",id:"callbacks",level:2},{value:"Configuration",id:"configuration",level:3},{value:"GraphQLArmorAcceptCallback",id:"graphqlarmoracceptcallback",level:3},{value:"GraphQLArmorRejectCallback",id:"graphqlarmorrejectcallback",level:3},{value:"Plugins",id:"plugins",level:2}];function p(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"types",children:"Types"})}),"\n",(0,n.jsxs)(r.p,{children:["Import types to configure GraphQL Armor from the ",(0,n.jsx)(r.code,{children:"@escape.tech/graphql-armor-types"})," package or each ",(0,n.jsx)(r.a,{href:"../../category/plugins/",children:"plugin"})," individually."]}),"\n",(0,n.jsx)(r.h2,{id:"config",children:"Config"}),"\n",(0,n.jsxs)(r.p,{children:["The complete set of ",(0,n.jsx)(r.a,{href:"#plugins",children:"configuration options"})," is available in the ",(0,n.jsx)(r.code,{children:"GraphQLArmorConfig"})," type and can be imported from the ",(0,n.jsx)(r.code,{children:"@escape.tech/graphql-armor-types"})," package:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"export type ProtectionConfiguration = {\n  enabled?: boolean;\n};\n\nexport type GraphQLArmorConfig = {\n  blockFieldSuggestion?: ProtectionConfiguration & BlockFieldSuggestionsOptions;\n  costLimit?: ProtectionConfiguration & CostLimitOptions;\n  maxAliases?: ProtectionConfiguration & MaxAliasesOptions;\n  maxDepth?: ProtectionConfiguration & MaxDepthOptions;\n  maxDirectives?: ProtectionConfiguration & MaxDirectivesOptions;\n  maxTokens?: ProtectionConfiguration & MaxTokensOptions;\n};\n"})}),"\n",(0,n.jsx)(r.h2,{id:"callbacks",children:"Callbacks"}),"\n",(0,n.jsx)(r.h3,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"export type GraphQLArmorCallbackConfiguration = {\n  onAccept?: GraphQLArmorAcceptCallback[];\n  onReject?: GraphQLArmorRejectCallback[];\n  propagateOnRejection?: boolean;\n};\n"})}),"\n",(0,n.jsx)(r.h3,{id:"graphqlarmoracceptcallback",children:"GraphQLArmorAcceptCallback"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"import type { ValidationContext } from 'graphql';\n\nexport type GraphQLArmorAcceptCallback = (ctx: ValidationContext | null, details: any) => void;\n"})}),"\n",(0,n.jsx)(r.h3,{id:"graphqlarmorrejectcallback",children:"GraphQLArmorRejectCallback"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"import type { GraphQLError, ValidationContext } from 'graphql';\n\nexport type GraphQLArmorRejectCallback = (ctx: ValidationContext | null, error: GraphQLError) => void;\n"})}),"\n",(0,n.jsx)(r.h2,{id:"plugins",children:"Plugins"}),"\n",(0,n.jsxs)(r.p,{children:["Types to ",(0,n.jsx)(r.a,{href:"../../category/configuration",children:"configure"})," each of the plugins are available from their respective packages and are used in ",(0,n.jsx)(r.code,{children:"GraphQLArmorConfig"}),":"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"import type { BlockFieldSuggestionsOptions } from '@escape.tech/graphql-armor-block-field-suggestions';\nimport type { CostLimitOptions } from '@escape.tech/graphql-armor-cost-limit';\nimport type { MaxAliasesOptions } from '@escape.tech/graphql-armor-max-aliases';\nimport type { MaxDepthOptions } from '@escape.tech/graphql-armor-max-depth';\nimport type { MaxDirectivesOptions } from '@escape.tech/graphql-armor-max-directives';\nimport type { MaxTokensOptions } from '@escape.tech/graphql-armor-max-tokens';\nimport type { GraphQLError, ValidationContext } from 'graphql';\n"})})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);